local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\149\1","\41\187\47\101"),function(v42) if (v9(v42,2)==81) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,1));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v130=0;local v131;while true do if (0==v130) then v131=v13(v103,v30);v30=nil;v130=1;end if (1==v130) then return v131;end end else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/((5 -3)^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%1) ;end end else local v106=0;local v107;while true do if (0==v106) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + (5 -3) ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==1) then v58=1;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,61 -29 )==1) and  -1) or 1 ;v55=3;end if (3==v55) then if (v60==0) then if (v59==(0 -0)) then return v61 * 0 ;else local v132=0;while true do if (0==v132) then v60=1;v58=619 -(555 + 64) ;break;end end end elseif (v60==(2978 -(857 + 74))) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (3==v63) then return v14(v65);end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -(569 -(367 + 201)) );v29=v29 + v62 ;v63=2;end if (v63==2) then v65={};for v115=1, #v64 do v65[v115]=v10(v9(v11(v64,v115,v115)));end v63=3;end if (v63==0) then v64=nil;if  not v62 then local v122=0;while true do if (v122==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=0;local v81;local v82;while true do if (v80==1) then if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v71[v79]=v82;break;end if (v80==0) then v81=v32();v82=nil;v80=1;end end end v69[3]=v32();for v83=1,v34() do local v84=v32();if (v31(v84,1,1)==0) then local v111=v31(v84,2,3);local v112=v31(v84,4,6);local v113={v33(),v33(),nil,nil};if (v111==0) then local v123=0;while true do if (v123==0) then v113[3]=v33();v113[4]=v33();break;end end elseif (v111==1) then v113[3]=v34();elseif (v111==2) then v113[3]=v34() -(2^16) ;elseif (v111==3) then v113[1 + 2 ]=v34() -((879 -(282 + 595))^16) ;v113[4]=v33();end if (v31(v112,1,1)==1) then v113[2]=v71[v113[2]];end if (v31(v112,2,2)==1) then v113[3]=v71[v113[3]];end if (v31(v112,3,3)==1) then v113[4]=v71[v113[1641 -(1523 + 114) ]];end v66[v83]=v113;end end for v85=1 + 0 ,v34() do v67[v85-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2 -0 ];local v78=v73[3];return function(...) local v87=v76;local v88=v77;local v89=v78;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v108=0,v95 do if (v108>=v89) then v93[v108-v89 ]=v94[v108 + 1 ];else v97[v108]=v94[v108 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do v99=v87[v91];v100=v99[1];if (v100<=39) then if (v100<=19) then if (v100<=9) then if (v100<=4) then if (v100<=1) then if (v100>0) then v97[v99[2]][v99[3]]=v97[v99[4]];else local v141=v99[2];local v142,v143=v90(v97[v141](v21(v97,v141 + 1 ,v92)));v92=(v143 + v141) -(1066 -(68 + 997)) ;local v144=0;for v226=v141,v92 do v144=v144 + (1271 -(226 + 1044)) ;v97[v226]=v142[v144];end end elseif (v100<=(8 -6)) then do return;end elseif (v100>3) then v97[v99[2]]=v99[3]~=0 ;else do return;end end elseif (v100<=6) then if (v100>5) then local v145=0;local v146;while true do if (v145==0) then v146=v99[2];v97[v146](v97[v146 + 1 ]);break;end end else v97[v99[2]][v99[3]]=v99[4];end elseif (v100<=7) then v97[v99[2]]=v97[v99[3]][v99[4]];elseif (v100==8) then v97[v99[2]]=v99[3]~=0 ;else for v301=v99[119 -(32 + 85) ],v99[3] do v97[v301]=nil;end end elseif (v100<=14) then if (v100<=(11 + 0)) then if (v100>10) then for v229=v99[2],v99[1 + 2 ] do v97[v229]=nil;end else local v151=0;local v152;local v153;local v154;local v155;while true do if (v151==2) then for v329=v152,v92 do local v330=0;while true do if (v330==0) then v155=v155 + (958 -(892 + 65)) ;v97[v329]=v153[v155];break;end end end break;end if (v151==1) then v92=(v154 + v152) -1 ;v155=0;v151=2;end if (v151==0) then v152=v99[2];v153,v154=v90(v97[v152](v21(v97,v152 + 1 ,v99[3])));v151=1;end end end elseif (v100<=12) then v97[v99[4 -2 ]]=v74[v99[5 -2 ]];elseif (v100>(23 -10)) then do return v97[v99[2]]();end else v97[v99[352 -(87 + 263) ]]=v75[v99[183 -(67 + 113) ]];end elseif (v100<=(12 + 4)) then if (v100>15) then v91=v99[3];else local v159=0;local v160;while true do if (v159==0) then v160=v99[2];do return v97[v160](v21(v97,v160 + 1 ,v99[3]));end break;end end end elseif (v100<=17) then do return v97[v99[2]]();end elseif (v100>18) then v97[v99[4 -2 ]]=v97[v99[3]][v99[4]];else local v249=v99[2];v97[v249]=v97[v249](v21(v97,v249 + 1 ,v92));end elseif (v100<=29) then if (v100<=24) then if (v100<=21) then if (v100==20) then local v161=0;local v162;local v163;while true do if (v161==0) then v162=v99[2];v163=v97[v99[3]];v161=1;end if (v161==1) then v97[v162 + 1 ]=v163;v97[v162]=v163[v99[4]];break;end end else local v164=0;local v165;local v166;local v167;local v168;while true do if (1==v164) then v92=(v167 + v165) -1 ;v168=0;v164=2;end if (0==v164) then v165=v99[2 + 0 ];v166,v167=v90(v97[v165](v97[v165 + (3 -2) ]));v164=1;end if (v164==2) then for v331=v165,v92 do v168=v168 + 1 ;v97[v331]=v166[v168];end break;end end end elseif (v100<=(974 -(802 + 150))) then local v169=0;local v170;while true do if (v169==0) then v170=v99[2];v97[v170](v21(v97,v170 + 1 ,v92));break;end end elseif (v100==(61 -38)) then v97[v99[2]]=v40(v88[v99[3]],nil,v75);else local v252=0;local v253;while true do if (0==v252) then v253=v99[2];v97[v253]=v97[v253](v21(v97,v253 + 1 ,v99[5 -2 ]));break;end end end elseif (v100<=26) then if (v100==25) then local v171=v88[v99[3]];local v172;local v173={};v172=v18({},{[v7("\13\57\51\176\5\55\30","\97\82\102\90\222")]=function(v231,v232) local v233=0;local v234;while true do if (v233==0) then v234=v173[v232];return v234[1][v234[2]];end end end,[v7("\17\148\69\194\64\165\32\175\78\223","\204\78\203\43\167\55")]=function(v235,v236,v237) local v238=0;local v239;while true do if (v238==0) then v239=v173[v236];v239[1][v239[2]]=v237;break;end end end});for v240=1,v99[4] do local v241=0;local v242;while true do if (0==v241) then v91=v91 + 1 ;v242=v87[v91];v241=1;end if (v241==1) then if (v242[1]==(27 + 10)) then v173[v240-1 ]={v97,v242[3]};else v173[v240-1 ]={v74,v242[3]};end v96[ #v96 + 1 ]=v173;break;end end end v97[v99[2]]=v40(v171,v172,v75);else v97[v99[2]]=v97[v99[3]] + v99[4] ;end elseif (v100<=27) then v97[v99[2]]={};elseif (v100>28) then v97[v99[999 -(915 + 82) ]]=v97[v99[3]]%v97[v99[4]] ;else local v255=0;local v256;while true do if (v255==0) then v256=v99[2];v97[v256]=v97[v256](v97[v256 + 1 ]);break;end end end elseif (v100<=34) then if (v100<=31) then if (v100>(84 -54)) then v97[v99[2]]=v97[v99[3]]%v99[4] ;else local v178=0;local v179;while true do if (0==v178) then v179=v99[2];v97[v179](v21(v97,v179 + 1 ,v99[3]));break;end end end elseif (v100<=32) then v97[v99[2 + 0 ]]=v75[v99[3]];elseif (v100>33) then local v257=0;local v258;while true do if (v257==0) then v258=v99[2 -0 ];v97[v258](v97[v258 + 1 ]);break;end end elseif v97[v99[1189 -(1069 + 118) ]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=36) then if (v100==35) then v97[v99[2]]();else local v182=0;local v183;local v184;while true do if (0==v182) then v183=v99[4 -2 ];v184=v97[v183];v182=1;end if (v182==1) then for v340=v183 + 1 ,v92 do v15(v184,v97[v340]);end break;end end end elseif (v100<=37) then v97[v99[2]]=v97[v99[3]];elseif (v100==38) then local v259=0;local v260;local v261;local v262;local v263;while true do if (v259==0) then v260=v99[3 -1 ];v261,v262=v90(v97[v260](v21(v97,v260 + 1 ,v92)));v259=1;end if (v259==1) then v92=(v262 + v260) -1 ;v263=0;v259=2;end if (v259==2) then for v373=v260,v92 do local v374=0;while true do if (v374==0) then v263=v263 + 1 ;v97[v373]=v261[v263];break;end end end break;end end else local v264=0;local v265;while true do if (v264==0) then v265=v99[2];do return v21(v97,v265,v92);end break;end end end elseif (v100<=59) then if (v100<=49) then if (v100<=44) then if (v100<=41) then if (v100>40) then local v187=v99[2];v97[v187](v21(v97,v187 + 1 ,v99[3]));else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=42) then v97[v99[2]]=v99[3] + v97[v99[4]] ;elseif (v100==43) then v97[v99[2]]=v97[v99[1 + 2 ]]%v99[4] ;else local v267=v99[2];local v268=v97[v267];for v315=v267 + 1 ,v92 do v15(v268,v97[v315]);end end elseif (v100<=46) then if (v100==45) then local v190=0;local v191;local v192;local v193;local v194;while true do if (1==v190) then v92=(v193 + v191) -1 ;v194=0;v190=2;end if (v190==2) then for v341=v191,v92 do local v342=0;while true do if (v342==0) then v194=v194 + 1 ;v97[v341]=v192[v194];break;end end end break;end if (v190==0) then v191=v99[2];v192,v193=v90(v97[v191](v97[v191 + 1 ]));v190=1;end end else local v195=v99[3 -1 ];do return v97[v195](v21(v97,v195 + 1 + 0 ,v99[3]));end end elseif (v100<=(838 -(368 + 423))) then v97[v99[6 -4 ]]=v40(v88[v99[3]],nil,v75);elseif (v100==48) then v97[v99[2]]=v97[v99[3]];else v97[v99[2]]=v99[3];end elseif (v100<=54) then if (v100<=51) then if (v100==50) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v197=v99[20 -(10 + 8) ];local v198=v97[v197 + 2 ];local v199=v97[v197] + v198 ;v97[v197]=v199;if (v198>0) then if (v199<=v97[v197 + 1 ]) then local v343=0;while true do if (0==v343) then v91=v99[3];v97[v197 + 3 ]=v199;break;end end end elseif (v199>=v97[v197 + 1 ]) then v91=v99[3];v97[v197 + 3 ]=v199;end end elseif (v100<=52) then v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;elseif (v100>(203 -150)) then local v274=0;local v275;local v276;local v277;while true do if (v274==0) then v275=v99[2];v276=v97[v275];v274=1;end if (v274==1) then v277=v97[v275 + 2 ];if (v277>(442 -(416 + 26))) then if (v276>v97[v275 + 1 ]) then v91=v99[3];else v97[v275 + (9 -6) ]=v276;end elseif (v276<v97[v275 + 1 ]) then v91=v99[3];else v97[v275 + 3 ]=v276;end break;end end elseif (v97[v99[2]]==v99[4]) then v91=v91 + 1 + 0 ;else v91=v99[3];end elseif (v100<=56) then if (v100==55) then v97[v99[2]][v99[3]]=v99[4];else local v204=v99[2];local v205=v97[v204];local v206=v97[v204 + 2 ];if (v206>(0 -0)) then if (v205>v97[v204 + 1 ]) then v91=v99[3];else v97[v204 + (441 -(145 + 293)) ]=v205;end elseif (v205<v97[v204 + (431 -(44 + 386)) ]) then v91=v99[3];else v97[v204 + 3 ]=v205;end end elseif (v100<=(1543 -(998 + 488))) then v91=v99[1 + 2 ];elseif (v100>58) then local v278=0;local v279;while true do if (v278==0) then v279=v99[2];v97[v279]=v97[v279](v97[v279 + 1 + 0 ]);break;end end else v97[v99[2]]=v99[3];end elseif (v100<=(841 -(201 + 571))) then if (v100<=64) then if (v100<=61) then if (v100==60) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]();end elseif (v100<=62) then local v208=0;local v209;local v210;while true do if (v208==1) then v97[v209 + 1 ]=v210;v97[v209]=v210[v99[4]];break;end if (v208==0) then v209=v99[2];v210=v97[v99[3]];v208=1;end end elseif (v100>63) then local v283=0;local v284;while true do if (0==v283) then v284=v99[2];v97[v284]=v97[v284](v21(v97,v284 + 1 ,v92));break;end end else local v285=0;local v286;local v287;local v288;while true do if (2==v285) then for v375=1,v99[4] do local v376=0;local v377;while true do if (v376==1) then if (v377[4 -3 ]==37) then v288[v375-1 ]={v97,v377[3]};else v288[v375-1 ]={v74,v377[3]};end v96[ #v96 + 1 ]=v288;break;end if (v376==0) then v91=v91 + 1 ;v377=v87[v91];v376=1;end end end v97[v99[2]]=v40(v286,v287,v75);break;end if (v285==0) then v286=v88[v99[3]];v287=nil;v285=1;end if (v285==1) then v288={};v287=v18({},{[v7("\110\154\163\45\26\185\73","\220\49\197\202\67\126")]=function(v378,v379) local v380=0;local v381;while true do if (v380==0) then v381=v288[v379];return v381[1139 -(116 + 1022) ][v381[2]];end end end,[v7("\248\251\80\50\76\13\201\192\91\47","\100\167\164\62\87\59")]=function(v382,v383,v384) local v385=v288[v383];v385[1][v385[2]]=v384;end});v285=2;end end end elseif (v100<=66) then if (v100>65) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=67) then local v212=v99[2];v97[v212](v21(v97,v212 + 1 ,v92));elseif (v100>68) then v97[v99[2]]=v97[v99[3]] + v99[4] ;else local v291=0;local v292;while true do if (0==v291) then v292=v99[2];v97[v292]=v97[v292](v21(v97,v292 + 1 ,v99[3]));break;end end end elseif (v100<=74) then if (v100<=71) then if (v100==70) then local v213=0;local v214;while true do if (v213==0) then v214=v99[2];v97[v214]=v97[v214]();break;end end else local v215=0;local v216;while true do if (0==v215) then v216=v99[2];v97[v216]=v97[v216]();break;end end end elseif (v100<=72) then local v217=0;local v218;local v219;local v220;while true do if (v217==0) then v218=v99[2];v219=v97[v218 + 2 ];v217=1;end if (v217==1) then v220=v97[v218] + v219 ;v97[v218]=v220;v217=2;end if (2==v217) then if (v219>0) then if (v220<=v97[v218 + (3 -2) ]) then v91=v99[3];v97[v218 + (10 -7) ]=v220;end elseif (v220>=v97[v218 + 1 ]) then v91=v99[3];v97[v218 + 3 ]=v220;end break;end end elseif (v100>73) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]={};end elseif (v100<=(935 -(814 + 45))) then if (v100>75) then v97[v99[2]]= #v97[v99[3]];else v97[v99[2]][v99[3]]=v97[v99[4]];end elseif (v100<=77) then v97[v99[2]]=v74[v99[3]];elseif (v100==(192 -114)) then local v294=v99[1 + 1 ];do return v21(v97,v294,v92);end else local v295=0;local v296;local v297;local v298;local v299;while true do if (v295==2) then for v387=v296,v92 do local v388=0;while true do if (v388==0) then v299=v299 + 1 ;v97[v387]=v297[v299];break;end end end break;end if (v295==1) then v92=(v298 + v296) -(886 -(261 + 624)) ;v299=0;v295=2;end if (0==v295) then v296=v99[1 + 1 ];v297,v298=v90(v97[v296](v21(v97,v296 + 1 ,v99[3])));v295=1;end end end v91=v91 + (1 -0) ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);